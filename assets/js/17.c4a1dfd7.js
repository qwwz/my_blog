(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{234:function(t,_,e){"use strict";e.r(_);var v=e(0),s=Object(v.a)({},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("为了防范这样一类攻击，我们不得已要引入新的加密方案，即 HTTPS。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),e("p",[t._v("好，现在开始传输。")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),e("p",[t._v("服务器的数据只能用私钥进行加密(因为如果它用公钥那么浏览器也没法解密啦)，中间人一旦拿到公钥，那么就可以对服务端传来的数据进行解密了，就这样又被破解了。")]),t._v(" "),t._m(22),t._v(" "),e("p",[t._v("可以发现，对称加密和非对称加密，单独应用任何一个，都会存在安全隐患。那我们能不能把两者结合，进一步保证安全呢？")]),t._v(" "),e("p",[t._v("其实是可以的，演示一下整个流程：")]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),e("p",[t._v("尽管通过两者加密方式的结合，能够很好地实现加密传输，但实际上还是存在一些问题。黑客如果采用 DNS 劫持，将目标地址替换成黑客服务器的地址，然后黑客自己造一份公钥和私钥，照样能进行数据传输。而对于浏览器用户而言，他是不知道自己正在访问一个危险的服务器的。")]),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),e("p",[t._v("这个数字证书有两个作用:")]),t._v(" "),t._m(32),t._v(" "),e("p",[t._v("这个验证的过程发生在什么时候呢？")]),t._v(" "),t._m(33),t._v(" "),e("p",[t._v("现在我们来梳理一下"),e("code",[t._v("HTTPS")]),t._v("最终的加解密过程:\n"),e("img",{attrs:{src:t.$withBase("/week12/1.jpg"),alt:"project"}})]),t._v(" "),t._m(34),t._v(" "),e("p",[t._v("浏览器拿到数字证书后，如何来对证书进行认证呢？")]),t._v(" "),t._m(35),t._v(" "),e("p",[t._v("当然有时候对于浏览器而言，它不知道哪些 CA 是值得信任的，因此会继续查找 CA 的上级 CA，以同样的信息比对方式验证上级 CA 的合法性。一般根级的 CA 会内置在操作系统当中，当然如果向上找没有找到根级的 CA，那么将被视为不合法。")]),t._v(" "),t._m(36),t._v(" "),t._m(37)])},[function(){var t=this.$createElement,_=this._self._c||t;return _("h1",{attrs:{id:"_003-https为什么让数据传输更安全？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_003-https为什么让数据传输更安全？","aria-hidden":"true"}},[this._v("#")]),this._v(" 003:HTTPS为什么让数据传输更安全？")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[t._v("谈到"),e("code",[t._v("HTTPS")]),t._v(", 就不得不谈到与之相对的"),e("code",[t._v("HTTP")]),t._v("。"),e("code",[t._v("HTTP")]),t._v("的特性是明文传输，因此在传输的每一个环节，数据都有可能被第三方窃取或者篡改，具体来说，HTTP 数据经过 TCP 层，然后经过"),e("code",[t._v("WIFI路由器")]),t._v("、"),e("code",[t._v("运营商")]),t._v("和"),e("code",[t._v("目标服务器")]),t._v("，这些环节中都可能被中间人拿到数据并进行篡改，也就是我们常说的"),e("strong",[t._v("中间人攻击")]),t._v("。")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[e("code",[t._v("HTTPS")]),t._v("并不是一个新的协议, 而是一个加强版的"),e("code",[t._v("HTTP")]),t._v("。其原理是在"),e("code",[t._v("HTTP")]),t._v("和"),e("code",[t._v("TCP")]),t._v("之间建立了一个中间层，当"),e("code",[t._v("HTTP")]),t._v("和"),e("code",[t._v("TCP")]),t._v("通信时并不是像以前那样直接通信，直接经过了一个中间层进行加密，将加密后的数据包传给"),e("code",[t._v("TCP")]),t._v(", 响应的，"),e("code",[t._v("TCP")]),t._v("必须将数据包解密，才能传给上面的"),e("code",[t._v("HTTP")]),t._v("。这个中间层也叫"),e("code",[t._v("安全层")]),t._v("。"),e("code",[t._v("安全层")]),t._v("的核心就是对数据"),e("code",[t._v("加解密")]),t._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("接下来我们就来剖析一下"),_("code",[this._v("HTTPS")]),this._v("的加解密是如何实现的。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"对称加密和非对称加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密","aria-hidden":"true"}},[this._v("#")]),this._v(" 对称加密和非对称加密")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[this._v("#")]),this._v(" 概念")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("首先需要理解"),_("code",[this._v("对称加密")]),this._v("和"),_("code",[this._v("非对称加密")]),this._v("的概念，然后讨论两者应用后的效果如何。")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[e("code",[t._v("对称加密")]),t._v("是最简单的方式，指的是"),e("code",[t._v("加密")]),t._v("和"),e("code",[t._v("解密")]),t._v("用的是"),e("strong",[t._v("同样的密钥")]),t._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("而对于"),_("code",[this._v("非对称加密")]),this._v("，如果有 A、 B 两把密钥，如果用 A 加密过的数据包只能用 B 解密，反之，如果用 B 加密过的数据包只能用 A 解密。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"加解密过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加解密过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 加解密过程")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("接着我们来谈谈"),_("code",[this._v("浏览器")]),this._v("和"),_("code",[this._v("服务器")]),this._v("进行协商加解密的过程。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("首先，浏览器会给服务器发送一个随机数"),_("code",[this._v("client_random")]),this._v("\n和一个加密的方法列表。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("服务器接收后给浏览器返回另一个随机数"),_("code",[this._v("server_random")]),this._v("和加密方法。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("现在，两者拥有三样相同的凭证: "),_("code",[this._v("client_random")]),this._v("、"),_("code",[this._v("server_random")]),this._v("和加密方法。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("接着用这个加密方法将两个随机数混合起来生成密钥，这个密钥就是浏览器和服务端通信的"),_("code",[this._v("暗号")]),this._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"各自应用的效果"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#各自应用的效果","aria-hidden":"true"}},[this._v("#")]),this._v(" 各自应用的效果")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("如果用"),_("code",[this._v("对称加密")]),this._v("的方式，那么第三方可以在中间获取到"),_("code",[this._v("client_random")]),this._v("、"),_("code",[this._v("server_random")]),this._v("和加密方法，由于这个加密方法同时可以解密，所以中间人可以成功对暗号进行解密，拿到数据，很容易就将这种加密方式破解了。")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[t._v("既然"),e("code",[t._v("对称加密")]),t._v("这么不堪一击，我们就来试一试"),e("code",[t._v("非对称")]),t._v("加密。在这种加密方式中，服务器手里有两把钥匙，一把是"),e("code",[t._v("公钥")]),t._v("，也就是说每个人都能拿到，是公开的，另一把是"),e("code",[t._v("私钥")]),t._v("，这把私钥只有服务器自己知道。")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[t._v("浏览器把"),e("code",[t._v("client_random")]),t._v("和加密方法列表传过来，服务器接收到，把"),e("code",[t._v("server_random")]),t._v("、"),e("code",[t._v("加密方法")]),t._v("和"),e("code",[t._v("公钥")]),t._v("传给浏览器。")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[t._v("现在两者拥有相同的"),e("code",[t._v("client_random")]),t._v("、"),e("code",[t._v("server_random")]),t._v("和加密方法。然后浏览器用公钥将"),e("code",[t._v("client_random")]),t._v("和"),e("code",[t._v("server_random")]),t._v("加密，生成与服务器通信的"),e("code",[t._v("暗号")]),t._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("这时候由于是"),_("strong",[this._v("非对称加密")]),this._v("，公钥加密过的数据只能用"),_("code",[this._v("私钥")]),this._v("解密，因此中间人就算拿到浏览器传来的数据，由于他没有私钥，照样无法解密，保证了数据的安全性。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("这难道一定就安全吗？聪明的小伙伴早就发现了端倪。回到"),_("code",[this._v("非对称加密")]),this._v("的定义，公钥加密的数据可以用私钥解密，那私钥加密的数据也可以用公钥解密呀！")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"对称加密和非对称加密的结合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密的结合","aria-hidden":"true"}},[this._v("#")]),this._v(" 对称加密和非对称加密的结合")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("ol",[e("li",[t._v("浏览器向服务器发送"),e("code",[t._v("client_random")]),t._v("和加密方法列表。")]),t._v(" "),e("li",[t._v("服务器接收到，返回"),e("code",[t._v("server_random")]),t._v("、加密方法以及公钥。")]),t._v(" "),e("li",[t._v("浏览器接收，接着生成另一个随机数"),e("code",[t._v("pre_random")]),t._v(", 并且用公钥加密，传给服务器。(敲黑板！重点操作！)")]),t._v(" "),e("li",[t._v("服务器用公钥解密这个被加密后的"),e("code",[t._v("pre_random")]),t._v("。")])])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[t._v("现在浏览器和服务器有三样相同的凭证:"),e("code",[t._v("client_random")]),t._v("、"),e("code",[t._v("server_random")]),t._v("和"),e("code",[t._v("pre_random")]),t._v("。然后两者用相同的加密方法混合这三个随机数，生成最终的"),e("code",[t._v("密钥")]),t._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("然后浏览器和服务器尽管用一样的密钥进行通信，即使用"),_("code",[this._v("对称加密")]),this._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("这个最终的密钥是很难被中间人拿到的，为什么呢? 因为中间人没有私钥，从而"),_("strong",[this._v("拿不到pre_random")]),this._v("，也就无法生成最终的密钥了。")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[t._v("回头比较一下和单纯的使用"),e("strong",[t._v("非对称加密")]),t._v(", 这种方式做了什么改进呢？本质上是"),e("strong",[t._v("防止了私钥加密的数据外传")]),t._v("。单独使用"),e("strong",[t._v("非对称加密")]),t._v("，最大的漏洞在于服务器传数据给浏览器只能用"),e("code",[t._v("私钥")]),t._v("加密，这是危险产生的根源。利用"),e("code",[t._v("对称和非对称")]),t._v("加密结合的方式，就防止了这一点，从而保证了安全。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"添加数字证书"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#添加数字证书","aria-hidden":"true"}},[this._v("#")]),this._v(" 添加数字证书")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("事实上"),_("code",[this._v("HTTPS")]),this._v("在上述"),_("code",[this._v("结合对称和非对称加密")]),this._v("的基础上，又添加了"),_("code",[this._v("数字证书认证")]),this._v("的步骤。其目的就是让服务器证明自己的身份。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"传输过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#传输过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 传输过程")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("为了获取这个证书，服务器运营者需要向第三方认证机构获取授权，这个第三方机构也叫"),_("code",[this._v("CA")]),this._v("("),_("code",[this._v("Certificate Authority")]),this._v("), 认证通过后 CA 会给服务器颁发"),_("strong",[this._v("数字证书")]),this._v("。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("ol",[_("li",[this._v("服务器向浏览器证明自己的身份。")]),this._v(" "),_("li",[this._v("把公钥传给浏览器。")])])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("当服务器传送"),_("code",[this._v("server_random")]),this._v("、加密方法的时候，顺便会带上"),_("code",[this._v("数字证书")]),this._v("(包含了"),_("code",[this._v("公钥")]),this._v("), 接着浏览器接收之后就会开始验证数字证书。如果验证通过，那么后面的过程照常进行，否则拒绝执行。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"认证过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#认证过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 认证过程")])},function(){var t=this.$createElement,_=this._self._c||t;return _("p",[this._v("首先，会读取证书中的明文内容。CA 进行数字证书的签名时会保存一个 Hash 函数，来这个函数来计算明文内容得到"),_("code",[this._v("信息A")]),this._v("，然后用公钥解密明文内容得到"),_("code",[this._v("信息B")]),this._v("，两份信息做比对，一致则表示认证合法。")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("p",[t._v("HTTPS并不是一个新的协议, 它在"),e("code",[t._v("HTTP")]),t._v("和"),e("code",[t._v("TCP")]),t._v("的传输中建立了一个安全层，利用"),e("code",[t._v("对称加密")]),t._v("和"),e("code",[t._v("非对称机密")]),t._v("结合数字证书认证的方式，让传输过程的安全性大大提高。")])}],!1,null,null,null);_.default=s.exports}}]);